 ********Task 1: Buy a domain name from a domain Registrar :
   jjadams.store

 ********Task 2: Spin up a Ubuntu server & assign an elastic IP to it.
Create an Ubuntu Server:

1. Log in to the AWS Management Console.
2. Navigate to the EC2 dashboard.
3. Click "Launch Instance" in the top right corner.
4. Choose "Ubuntu Server" as the Amazon Machine Image (AMI).
5. Select the desired instance type (e.g., t2.micro) and click "Next: Configure Instance Details".
6. Configure the instance details as needed (e.g., VPC, subnet, security group).
7. Click "Next: Add Storage" and configure the storage as needed.
8. Click "Next: Add Tags" and add any desired tags.
9. Click "Next: Configure Security Group" and configure the security group as needed.
10. Click "Review and Launch" and then "Launch" to launch the instance.

Assign an Elastic IP:

1. Navigate to the VPC dashboard.
2. Click "Elastic IPs" in the left-hand menu.
3. Click "Allocate Elastic IP".
4. Select "IPv4" as the IP address type.
5. Click "Allocate" to allocate a new Elastic IP.
6. Select the Elastic IP you just allocated.
7. Click "Actions" and then "Associate Elastic IP".
8. Select the Ubuntu server instance you created earlier.
9. Click "Associate" to associate the Elastic IP with the instance.


Verify the Elastic IP:

1. Navigate to the EC2 dashboard.
2. Select the Ubuntu server instance.
3. Look for the "Public IP" field, which should now display the Elastic IP you assigned.

That's it! You now have an Ubuntu server with an assigned Elastic IP. You can use the Elastic IP to access your server via SSH or other services.
Note

The IP address for your instance has been updated to the elastic IP associated with it. Therefore, you will need to SSH into your instance again. Return to the connection page of your instance and copy the new command.

Paste the command into your terminal and then press Enter. When prompted, type "yes" and press Enter to connect.



****Task 3: SSH into the server and install Nginx.

Install Nginx and Setup Your Website                                         /var/www/html/2137_barista_cafe ;
Execute the following commands.
sudo apt update

sudo apt upgrade

sudo apt install nginx

-----Start your Nginx server by running the sudo systemctl start nginx command, enable it to start on boot by executing sudo systemctl enable nginx, and then confirm if it's running with the sudo systemctl status nginx command.

----Go back to your EC2 dashboard and copy your Public IPv4 address.

----Visit your instances Public IPv4 address in a web browser to view the default Nginx startup page.

 *****Task 4: Find freely available HTML website files.
----Download your website template from your preferred website by navigating to the website, locating the template you want, and obtaining the download URL for the website.

----How to obtain the website template URL from tooplate.com: Visit Tooplate and select the website template you prefer.
https://www.tooplate.com/zip-templates/2137_barista_cafe.zip

 Task 5: Download and unzip the website files to the Nginx website directory.
---- sudo curl -o /var/www/html/2137_barista_cafe.zip https://www.tooplate.com/zip-templates/2137_barista_cafe.zip
--- 
 Task 6: Validate the website using the server IP address.

 Task 7: In Route53, create an A record and add the Elastic IP.
---Go back to your AWS console, search for Route 53①, and then choose Route 53② from the list of services shown.
---Click on Get started.
===Select Create hosted zones① and click on Get started②.
---Enter your Domain name①, choose Public hosted zone② and then click on Create hosted zone③.

 Task 8: Using DNS verify the website setup.

 Task 9: Install certbot and Request For an SSL/TLS Certificate.
----Install certbot by executing the following commands: sudo apt update
--- sudo apt install certbot python3-certbot-nginx
---- Execute the sudo certbot --nginx (command to request your certificate. Follow the instructions provided by certbot and select the domain name for which you would like to activate HTTPS.)


 Task 10: Validate the website SSL using the OpenSSL utility.
----Verify the website's SSL using the OpenSSL utility with the command: openssl s_client -connect jjadams.store:443

https://jjadams.store
